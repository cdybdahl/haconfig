#################################################################
## Sensors
#################################################################  

    - platform: darksky
      api_key: !secret darksky_api
      monitored_conditions:
        - temperature
        - temperature_max
        - temperature_min
        - summary
        - hourly_summary
        - precip_probability
        - humidity
        - pressure
        - apparent_temperature
        - dew_point
        - apparent_temperature_max
      update_interval:
        minutes: 10
    
    - platform: template
      sensors:
        batt_smoke1:
          friendly_name: 'Kitchen smoke alarm battery'
          value_template: '{{ states.zwave.kitchen_smoke_alarm.attributes.battery_level }}'
          unit_of_measurement: '%'

    - platform: template
      sensors:
        smoke1:
          friendly_name: 'Kitchen smoke alarm'
          value_template: "{% if is_state('sensor.kitchen_smoke_alarm_alarm_type', '13') %}
            No alarm
            {% elif is_state('sensor.kitchen_smoke_alarm_alarm_type', '12') %}
            Testing
          {% else %}
            ALERT!
          {% endif %}"

    - platform: template
      sensors:
        batt_smoke2:
          friendly_name: 'Upstairs smoke alarm battery'
          value_template: '{{ states.zwave.upstairs_smoke_alarm.attributes.battery_level }}'
          unit_of_measurement: '%'

    - platform: template
      sensors:
        smoke2:
          friendly_name: 'Upstairs smoke alarm'
          value_template: "{% if is_state('sensor.upstairs_smoke_alarm_alarm_type', '13') %}
            No alarm
            {% elif is_state('sensor.kitchen_smoke_alarm_alarm_type', '12') %}
            Testing
          {% else %}
            ALERT!
          {% endif %}"
          
    - platform: template
      sensors:
        batt_sump:
          friendly_name: 'Sump battery'
          value_template: '{{ float(states.zwave.everspring_st812_flood_detector.attributes.battery_level) }}'
          unit_of_measurement: '%'
          
    - platform: command_line
      name: SSL cert expiry
      unit_of_measurement: days
      scan_interval: 10800
      command: "ssl-cert-check -b -c /etc/letsencrypt/live/dybdahl.duckdns.org/cert.pem | awk '{ print $NF }'"
      
    - platform: template
      sensors:
        den:
          value_template: '{{ states.remote.den.attributes.current_activity }}'
          friendly_name: 'Den'
          
    - platform: template
      sensors:
        template_calendar_house:
           value_template: >
             {{ strptime(states.calendar.familydybdahlgmailcom.attributes.start_time, "%Y-%m-%d %H:%M:%S").strftime("%A, %B %d") }}:
             {{ states.calendar.familydybdahlgmailcom.attributes.message }}
           friendly_name: Next task
           unit_of_measurement: ''
           
    - platform: template
      sensors:
        kitchen_sliding_window:
          value_template: '{% if is_state("sensor.kitchen_sliding_window_alarm_level", "0") %}Closed{% else %}Open{% endif %}'
          friendly_name: Kitchen window
          
    - platform: template
      sensors:
       current_month:
         value_template: "{{ now().strftime('%B') }}"
         friendly_name: 'Current Month'
         
    - platform: template
      sensors:
        floorplan_date:
          friendly_name: 'Date'
          value_template: >-
            {{now().strftime("%A")}}, {{now().strftime("%B")}} {{now().strftime("%d")}}

    - platform: template
      sensors:
        floorplan_time:
          friendly_name: 'Time'
          value_template: >-
            {{now().strftime("%-I")}}:{{now().strftime("%M")}} {{now().strftime("%p")}}


    - platform: google_travel_time
      name: Home to work
      api_key: !secret google_travel_time_api
      origin: zone.home
      destination: zone.work

    - platform: google_travel_time
      name: Work to home
      api_key: !secret google_travel_time_api
      origin: zone.work
      destination: zone.home